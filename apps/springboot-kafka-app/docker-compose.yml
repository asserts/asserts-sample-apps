version: '3.1'
services:
  postgresql:
    image: postgres:13.1
    container_name: pg-kafka
    ports:
      - "5433:5433"
    environment:
      - POSTGRES_USER=user1
      - POSTGRES_PASSWORD=user1
    volumes:
      - ./postgres.conf:/etc/postgresql/postgresql.conf
      - ./postgres-data:/var/lib/postgresql/data
    #entrypoint: ["/bin/sh","-c"]
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    #restart: always
  postgresexport:
    image: anapsix/alpine-java
    links:
      - "postgresql:pgsql"
    ports:
      - "9187:9187"
    environment:
      - PG_EXPORTER_EXTEND_QUERY_PATH=/var/lib/pg_query.yaml
      - DATA_SOURCE_NAME=postgresql://user1:user1@pgsql:5433/postgres?sslmode=disable
    volumes:
      - ./postgres_exporter:/var/lib/postgres_exporter
      - ./pg_query.yaml:/var/lib/pg_query.yaml
    command: /var/lib/postgres_exporter
    depends_on:
      - postgresql
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    build:
      context: kafka
      dockerfile: Dockerfile
    hostname: kafka
    container_name: kafka
    links:
      - zookeeper:zk
    ports:
      - "9092:9092"
      - "7071:7071"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zk:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CREATE_TOPICS: "Topic3:1:1"
      KAFKA_MESSAGE_MAX_BYTES: 2000000
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
  spring_boot:
    build: .
    links:
      - "postgresql:pgsql"
    ports:
      - "8090:8090"
      - "8095:8095"
    depends_on:
      - kafka
      - zookeeper
      - postgresql
      - postgresexport
  prometheus:
    image: prom/prometheus:v2.25.0
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
