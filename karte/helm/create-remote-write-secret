#!/bin/bash

if [ -z $TENANT ]; then
  echo "TENANT is not defined!"
  exit 1
fi

if [ -z $PASSWORD ]; then
  echo "PASSWORD is not defined!"
  exit 1
fi

if [ -z $NAMESPACE ]; then
  echo "NAMESPACE is not defined! Defaulting to prometheus"
  NAMESPACE=prometheus
fi

# create generic secret (only local with dry-run)
# namespace and name must match SealedSecret
kubectl create secret generic ${TENANT}-tsdb-remote-write --namespace=${NAMESPACE} --dry-run --from-literal=username=${TENANT} --from-literal=password=${PASSWORD} -oyaml > ${TENANT}-unencrypted.yaml

# seal the secret
kubeseal --controller-name=sealed-secrets --controller-namespace=kube-system --format=yaml < ${TENANT}-unencrypted.yaml > ${TENANT}.yaml

rm ${TENANT}-unencrypted.yaml

# use password and username generated in $TENANT-values.yaml
cat ${TENANT}.yaml
rm ${TENANT}.yaml
