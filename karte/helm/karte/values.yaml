# Default values for karte.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: 543343501704.dkr.ecr.us-west-2.amazonaws.com/ai.asserts.karte
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

#serviceAccount:
#  # Specifies whether a service account should be created
#  create: true
#  # Annotations to add to the service account
#  annotations: {}
#  # The name of the service account to use.
#  # If not set and create is true, a name is generated using the fullname template
#  name: ""

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
   limits:
     memory: 512Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

appVersion: "0.1.0"

# These services are not directly used in the demo story, but they all talk to each other and serve to add some
# complexity to the graph.
additionalServices:
  - "currant"
  - "acai"
  - "agarita"
  - "amla"
  - "bane"
  - "mul"
  - "boysen"
  - "buffalo"
  - "caper"

tenant:
  auth:
    enabled: false

kube-prometheus-stack:
  namespaceOverride: "prometheus"

  kube-state-metrics:
    namespaceOverride: "prometheus"

  prometheus-node-exporter:
    namespaceOverride: "prometheus"

  grafana:
    namespaceOverride: "prometheus"
    ingress:
      enabled: true
      hosts:
        - "localhost"
  prometheus:
    prometheusSpec:
      remoteWrite:
        - url: http://host.docker.internal:8428/api/v1/write

  kubelet:
    serviceMonitor:
      # When running on kind, cAdvisor will discover metrics via both the docker container that kind's node run in
      # and through Kubernetes. The result is that container metrics will be duplicated which causes problems.
      # To avoid that, drop the metrics sourced from kind's docker container.
      #
      # For more, see: https://app.clubhouse.io/asserts/story/2648/
      cAdvisorMetricRelabelings:
       - sourceLabels: [id]
         regex: \/docker\/.*
         action: drop

fluent-bit:
  # Default values for fluent-bit.
  # kind -- DaemonSet or Deployment
  kind: DaemonSet
  image:
    repository: fluent/fluent-bit
    pullPolicy: IfNotPresent
    tag: 1.5.3
  nameOverride: "fluent-bit"
  fullnameOverride: "fluent-bit"
  service:
    type: ClusterIP
    port: 2020
  serviceMonitor:
    enabled: true
    namespace: default
  resources:
    requests:
      cpu: 10m
      memory: 20Mi
  ## https://docs.fluentbit.io/manual/administration/configuring-fluent-bit
  config:
    ## https://docs.fluentbit.io/manual/service
    service: |
      [SERVICE]
          Flush 1
          Daemon Off
          Log_Level info
          Parsers_File parsers.conf
          Parsers_File custom_parsers.conf
          HTTP_Server On
          HTTP_Listen 0.0.0.0
          HTTP_Port 2020
    ## https://docs.fluentbit.io/manual/pipeline/inputs
    inputs: |
      [INPUT]
          Name                    tail
          Tag                     kube.*
          Path                    /var/log/containers/*.log
          Parser                  docker
          DB                      /var/log/flb_kube.db
          Mem_Buf_Limit           5MB
          Refresh_Interval        10
    ## https://docs.fluentbit.io/manual/pipeline/filters
    filters: |
      [FILTER]
          Name                    kubernetes
          Match                   kube.*
          Merge_Log_Key           log
          Merge_Log               On
          Keep_Log                Off
          Annotations             Off
          Labels                  Off
          K8S-Logging.Parser On
          K8S-Logging.Exclude On
      [FILTER]
          Name                nest
          Match               kube.*
          Wildcard            *_name
          Operation lift
          Nested_under kubernetes
          Add_prefix   kubernetes_
      [FILTER]
          Name                modify
          Match               kube.*
          Copy     kubernetes_pod_name pod
          Copy     kubernetes_namespace_name namespace
          Copy     kubernetes_container_name container
          Copy     kubernetes_container_name tag
    ## https://docs.fluentbit.io/manual/pipeline/outputs
    outputs: |
      [FILTER]
          Name                modify
          Match               *
          Remove_wildcard kubernetes
      [FILTER]
          Name                modify
          Match               *
          Set     cluster     kind-control-plane
      [OUTPUT]
          Name                    gelf
          Match                   *
          Host                    graylog-tcp.monitoring.dev.asserts.ai
          Port                    12201
          Mode                    tcp
          Gelf_Timestamp_Key      time
          Gelf_Host_Key           stream
          Gelf_Short_Message_Key  log
