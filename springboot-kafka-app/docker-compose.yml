version: '3.9'
services:
#  pgsql:
#    image: postgres:13.1
#    container_name: postgres
#    ports:
#      - "5433:5433"
#    environment:
#      - POSTGRES_USER=user1
#      - POSTGRES_PASSWORD=user1
#    volumes:
#      - ./docker/pgsql/postgres.conf:/etc/postgresql/postgresql.conf
#      - ./docker/pgsql/postgres-data:/var/lib/postgresql/data
#    command: postgres -c config_file=/etc/postgresql/postgresql.conf
#
#  pgexporter:
#    image: quay.io/prometheuscommunity/postgres-exporter
#    container_name: pg_exporter
#    ports:
#      - "9187:9187"
#    environment:
#      - PG_EXPORTER_EXTEND_QUERY_PATH=/var/lib/pg_query.yaml
#      - DATA_SOURCE_NAME=postgresql://user1:user1@pgsql:5433/postgres?sslmode=disable
#    volumes:
#      - ./docker/pgexporter/postgres_exporter:/var/lib/postgres_exporter
#      - ./docker/pgexporter/pg_query.yaml:/var/lib/pg_query.yaml
#    depends_on:
#      - pgsql

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    build:
      context: kafka
      dockerfile: Dockerfile
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "7071:7071"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CREATE_TOPICS: "Topic3:1:1,Topic4:1:1,Topic5:1:1,orders:1:1,verifiedorders:1:1,localorders:1:1,outstationorders:1:1"
      KAFKA_MESSAGE_MAX_BYTES: 2000000
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
  orderplacement:
    build:
      context: orderplacement
      dockerfile: Dockerfile
    ports:
      - "8096:8096"
      - "8091:8091"
    depends_on:
      - zookeeper
      - kafka
  orderverifier:
    build:
      context: orderverifier
      dockerfile: Dockerfile
    ports:
      - "8097:8097"
      - "8092:8092"
    depends_on:
      - zookeeper
      - kafka
      - orderplacement
#  ordercategorizer:
#    build:
#      context: ordercategorizer
#      dockerfile: Dockerfile
#    ports:
#      - "8097:8097"
#      - "8093:8093"
#    depends_on:
#      - zookeeper
#      - kafka
#      - orderplacement
#      - orderverifier
  springboot-kafka-app:
    container_name: springboot-kafka-app
    build: .
    ports:
      - "8095:8095"
      - "8090:8090"
    depends_on:
      - kafka
      - zookeeper
#      - pgsql
#      - pgexporter

  prometheus:
    image: prom/prometheus:v2.25.0
    container_name: prometheus
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./docker/prometheus/prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
